import os from 'node:os';
import path from 'node:path';
import { z } from 'zod';
import { defineTool } from './tool.js';
import { sanitizeForFilePath } from './utils.js';
import { formatObject } from '../javascript.js';

const pdf = defineTool({
  capability: "pdf",
  schema: {
    name: "browser_pdf_save",
    description: "Save page as PDF",
    inputSchema: z.object({})
  },
  handle: async (context) => {
    const tab = context.currentTabOrDie();
    const fileName = path.join(os.tmpdir(), sanitizeForFilePath(`page-${(/* @__PURE__ */ new Date()).toISOString()}`)) + ".pdf";
    const code = [
      `// Save page as ${fileName}`,
      `await page.pdf(${formatObject({ path: fileName })});`
    ];
    return {
      code,
      action: async () => tab.page.pdf({ path: fileName }).then(() => {
      }),
      captureSnapshot: false,
      waitForNetwork: false
    };
  }
});
const pdf$1 = [
  pdf
];

export { pdf$1 as default };
