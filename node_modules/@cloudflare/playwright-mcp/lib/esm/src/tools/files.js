import { z } from 'zod';
import { defineTool } from './tool.js';

const uploadFile = (captureSnapshot) => defineTool({
  capability: "files",
  schema: {
    name: "browser_file_upload",
    description: "Upload one or multiple files",
    inputSchema: z.object({
      paths: z.array(z.string()).describe("The absolute paths to the files to upload. Can be a single file or multiple files.")
    })
  },
  handle: async (context, params) => {
    const modalState = context.modalStates().find((state) => state.type === "fileChooser");
    if (!modalState)
      throw new Error("No file chooser visible");
    const code = [
      `// <internal code to chose files ${params.paths.join(", ")}`
    ];
    const action = async () => {
      await modalState.fileChooser.setFiles(params.paths);
      context.clearModalState(modalState);
    };
    return {
      code,
      action,
      captureSnapshot,
      waitForNetwork: true
    };
  },
  clearsModalState: "fileChooser"
});
const files = (captureSnapshot) => [
  uploadFile(captureSnapshot)
];

export { files as default };
