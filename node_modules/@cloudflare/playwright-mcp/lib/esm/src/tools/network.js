import { z } from 'zod';
import { defineTool } from './tool.js';

const requests = defineTool({
  capability: "core",
  schema: {
    name: "browser_network_requests",
    description: "Returns all network requests since loading the page",
    inputSchema: z.object({})
  },
  handle: async (context) => {
    const requests2 = context.currentTabOrDie().requests();
    const log = [...requests2.entries()].map(([request, response]) => renderRequest(request, response)).join("\n");
    return {
      code: [`// <internal code to list network requests>`],
      action: async () => {
        return {
          content: [{ type: "text", text: log }]
        };
      },
      captureSnapshot: false,
      waitForNetwork: false
    };
  }
});
function renderRequest(request, response) {
  const result = [];
  result.push(`[${request.method().toUpperCase()}] ${request.url()}`);
  if (response)
    result.push(`=> [${response.status()}] ${response.statusText()}`);
  return result.join(" ");
}
const network = [
  requests
];

export { network as default };
