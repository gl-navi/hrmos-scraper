'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const colors = require('../utils/isomorphic/colors.js');

const noopZone = {
  push: () => noopZone,
  pop: () => noopZone,
  run: (func) => func(),
  data: () => void 0
};
const emptyPlatform = {
  name: "empty",
  boxedStackPrefixes: () => [],
  calculateSha1: async () => {
    throw new Error("Not implemented");
  },
  colors: colors.webColors,
  createGuid: () => {
    throw new Error("Not implemented");
  },
  defaultMaxListeners: () => 10,
  env: {},
  fs: () => {
    throw new Error("Not implemented");
  },
  inspectCustom: void 0,
  isDebugMode: () => false,
  isJSDebuggerAttached: () => false,
  isLogEnabled(name) {
    return false;
  },
  isUnderTest: () => false,
  log(name, message) {
  },
  path: () => {
    throw new Error("Function not implemented.");
  },
  pathSeparator: "/",
  showInternalStackFrames: () => false,
  streamFile(path, writable) {
    throw new Error("Streams are not available");
  },
  streamReadable: (channel) => {
    throw new Error("Streams are not available");
  },
  streamWritable: (channel) => {
    throw new Error("Streams are not available");
  },
  zones: { empty: noopZone, current: () => noopZone }
};

exports.emptyPlatform = emptyPlatform;
