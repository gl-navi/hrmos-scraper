import { debugMode } from './utils/debug.js';

const DEFAULT_TIMEOUT = 3e4;
const DEFAULT_LAUNCH_TIMEOUT = 3 * 60 * 1e3;
class TimeoutSettings {
  constructor(parent) {
    this._parent = parent;
  }
  setDefaultTimeout(timeout) {
    this._defaultTimeout = timeout;
  }
  setDefaultNavigationTimeout(timeout) {
    this._defaultNavigationTimeout = timeout;
  }
  defaultNavigationTimeout() {
    return this._defaultNavigationTimeout;
  }
  defaultTimeout() {
    return this._defaultTimeout;
  }
  navigationTimeout(options) {
    if (typeof options.timeout === "number")
      return options.timeout;
    if (this._defaultNavigationTimeout !== void 0)
      return this._defaultNavigationTimeout;
    if (debugMode())
      return 0;
    if (this._defaultTimeout !== void 0)
      return this._defaultTimeout;
    if (this._parent)
      return this._parent.navigationTimeout(options);
    return DEFAULT_TIMEOUT;
  }
  timeout(options) {
    if (typeof options.timeout === "number")
      return options.timeout;
    if (debugMode())
      return 0;
    if (this._defaultTimeout !== void 0)
      return this._defaultTimeout;
    if (this._parent)
      return this._parent.timeout(options);
    return DEFAULT_TIMEOUT;
  }
  static timeout(options) {
    if (typeof options.timeout === "number")
      return options.timeout;
    if (debugMode())
      return 0;
    return DEFAULT_TIMEOUT;
  }
  static launchTimeout(options) {
    if (typeof options.timeout === "number")
      return options.timeout;
    if (debugMode())
      return 0;
    return DEFAULT_LAUNCH_TIMEOUT;
  }
}

export { DEFAULT_LAUNCH_TIMEOUT, DEFAULT_TIMEOUT, TimeoutSettings };
